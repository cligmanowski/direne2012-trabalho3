# -*- coding: utf-8 -*-#!/usr/bin/env/pythonimport ast import sysimport randomdef adjacentes(tabuleiro,pote,vez,pote_nao_muda): #faz todas as jogadas possíveis para mostrar todos os estados possíveis e por enquanto faz somente um print delas . 		i=0	tabuleiro_antigo=list(tabuleiro)	tamanho = len(tabuleiro)	status=0		if ( vez=='a' ):		for i in range(0, tamanho/2):			status=jogada(tabuleiro,i,pote,vez,pote_nao_muda)			if (status==2):				return 1						tabuleiro=list(tabuleiro_antigo)	elif ( vez=='b' ):		for i in range(4, tamanho):			status=jogada(tabuleiro,i,pote,vez,pote_nao_muda)			if (status==2):				return 1			tabuleiro=list(tabuleiro_antigo)		def jogada(tabuleiro,lugar,pote,vez,pote_nao_muda): #faz uma jogada em um local específico	contador = 0	tamanho = len(tabuleiro)			pos=(lugar+contador)%tamanho	while (tabuleiro[pos] == 0):		contador = contador+1		pos=(lugar+contador)%tamanho		if (contador==4):			print "CONJUNTO VAZIO"			return 2		if (tabuleiro[lugar])==0:		return 1  	sementes = tabuleiro[lugar]	tabuleiro[lugar]=0    	for contador in range(1, sementes+1):		pos=(lugar+contador)%tamanho		if ( tabuleiro[pos] == 1):			tabuleiro[pos] = 0			pote=pote+2		else:			tabuleiro[pos] = tabuleiro[pos] + 1  	imprime=[]  		if (vez=='a'):		imprime.append(pote)		imprime.append(tabuleiro[0:4])		imprime.append(tabuleiro[4:tamanho])		imprime.append(pote_nao_muda)		#print imprime		imprime=[]	elif (vez=='b'):		imprime.append(pote_nao_muda)		imprime.append(tabuleiro[0:4])		imprime.append(tabuleiro[4:tamanho])		imprime.append(pote)		#print imprime		imprime=[]			if (pote >= 12):		return 4	return 0def jogador(tabuleiro,pote,vez,pote_nao_muda):	lugar=random.randint(1, 4)		while ( tabuleiro[lugar] == 0 ):		lugar=random.randint(1, 4)	status=jogada(tabuleiro,lugar,pote,vez,pote_nao_muda)	if ( status==4 ):		print ("GANHOU!!")	if __name__=="__main__":	tab=[]	tab=ast.literal_eval(sys.argv[1])	poteA=tab[0]	poteB=tab[9]	tab=tab[1:9]	vez = sys.argv[2]#print("Tab= {} Pote A={} PoteB={} Vez={}".format(tab,poteA,poteB,vez)) // Teste de variáveis'''	if ( vez=='a' ):		jogador(tab,poteA,vez,poteB)		#adjacentes(tab,poteA,vez,poteB)    	elif ( vez == 'b'):		jogador(tab,poteB,vez,poteA)			adjacentes(tab,poteB,vez,poteA)